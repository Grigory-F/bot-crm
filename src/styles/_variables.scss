@import "./node_modules/bootstrap/scss/functions";
@import "./node_modules/bootstrap/scss/variables";
@import "./node_modules/bootstrap/scss/utilities";

:root {
    --sidebar-opened-xl: 200px;
    --sidebar-opened-lg: 60px;
}

/* Overraides default values */
$primary: #006874;
$secondary: #6c757d;
$thrity: #ed6c44;
$success: #0aa25d;
$info: #404040;
$warning: #ffc107;
$danger: #dc3545;
$body-bg: #ebeef2;
$body-color: #334155;
$link-color: #4c78dd;
$link-color-hover: #1f47a4;

/* Components custom colors */

$system-component: rgba(225, 225, 225, 0.75);
$block-component: #f6f7f9;
$block: white;

$setting: rgba(40, 53, 71, 0.3);
$interface-icons: #2f3c4e;
$muted: $text-muted;

$colors: (
    "blue": $blue,
    "indigo": $indigo,
    "purple": $purple,
    "pink": $pink,
    "red": $red,
    "orange": $orange,
    "yellow": $yellow,
    "green": $green,
    "teal": $teal,
    "cyan": $cyan,
    "white": $white,
    "gray": $gray-600,
    "gray-dark": $gray-800,
);

$theme-colors: (
    "primary": $primary,
    "secondary": $secondary,
    "success": $success,
    "thrity": $thrity,
    "info": $info,
    "warning": $warning,
    "danger": $danger,
    "light": $light,
    "dark": $dark,
    "body-bg": $body-bg,
    "body-color": $body-color,
    /* Custom */ "system-component": $system-component,
    "block-component": $block-component,
    "block": $block,
    "setting": $setting,
    "interface-icons": $interface-icons,
    "muted": $muted,
);

$grid-columns: 12;

$grid-breakpoints: (
    xs: 0,
    ss: 380px,
    ms: 480px,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1440px,
    bl: 1600px,
    bxl: 1800px
);

$container-max-widths: (
    sm: 540px,
    md: 720px,
    lg: 960px,
    xl: 1140px,
    xxl: 1320px,
);


$min-height-sizes: (
    "50": 50px,
    "100": 100px,
    "150": 150px,
    "170": 170px,
    "200": 200px,
    "240": 240px,
    "290": 290px,
    "300": 300px,
    "350": 350px,
    "400": 400px,
);

/* =======================MARGINS======================= */

$spacer: 1rem; /* 16px */
$spacers: (
    0: 0,
    1: $spacer * 0.25,
    2: $spacer * 0.5,
    3: $spacer * 0.75,
    4: $spacer * 1.25,
    5: $spacer * 1.5,
    6: $spacer * 2,
    7: $spacer * 2.5,
    8: $spacer * 3,
    9: $spacer * 4,
    10: $spacer * 5,
    11: $spacer * 6,
    12: $spacer * 7,
    13: $spacer * 8,
    14: $spacer * 9,
    15: $spacer * 10,
    16: $spacer * 12,
    17: $spacer * 14,
    18: $spacer * 16,

    "base": $spacer,
);

$gutters: (
    0: 0,
    1: $spacer * 0.25,
    2: $spacer * 0.625,
    /* 10px */ 3: $spacer,
    4: $spacer * 1.5,
    5: $spacer * 3,
);

$border-radius: 0.25rem;
$border-radius-sm: 0.2rem;
$border-radius-md: 25px;
$border-radius-lg: 30px;
$border-radius-xl: 0.7rem;
$border-radius-xxl: 40px;
$border-radius-pill: 50rem;

/* =======================FONT======================= */

/* $font-family-sans-serif: Geometria; */

$font-weight-semi-bold: 600;
$font-weight-medium: 500;

$h1-font-size: $font-size-base * 2.5;
$h2-font-size: $font-size-base * 2;
$h3-font-size: $font-size-base * 1.75;
$h4-font-size: $font-size-base * 1.5;
$h5-font-size: $font-size-base * 1.25;
$h6-font-size: $font-size-base;
$big: $font-size-base * 3;
$small-custom-font: $font-size-base * 0.875;
$medium-small-custom-font: $font-size-base * 0.75;
$extra-small-custom-font: $font-size-base * 0.625;

$font-sizes: (
    1: $big,
    2: $h1-font-size,
    3: $h2-font-size,
    4: $h3-font-size,
    5: $h4-font-size,
    6: $h5-font-size,
    7: $h6-font-size,
    8: $small-custom-font,
    9: $medium-small-custom-font,
    10: $extra-small-custom-font,
);

$headings-margin-bottom: $spacer * 0.5;
$headings-font-family: null;
$headings-font-style: null;
$headings-font-weight: 500;
$headings-line-height: 1.2;
$headings-color: null;


$max-value-width: 100;
$begin-width: 0;
$spread-width: 10;

$max-value-width-percent: 100;
$begin-width-percent: 0;
$spread-width-percent: 10;

// GAP VALUES

$max-gap: 100;
$begin-gap: 5;
$spread-gap: 5;

@function generate-sizes($max-value-size, $spread-value, $begin-from-iter,$unitType,  $auto-flag: false, $none-flag: false) {
    $size-map-cutom: ();
    @if $auto-flag {
        $size-map-cutom: map-merge(
                $size-map-cutom,
                (
                    'auto': auto,
                )
            );
    }
    @if $none-flag {
        $size-map-cutom: map-merge(
                $size-map-cutom,
                (
                    'none': none,
                )
            );
    }
    @while $begin-from-iter <= $max-value-size {
        @if $begin-from-iter % $spread-value == 0 {
            $size-map-cutom: map-merge(
                $size-map-cutom,
                (
                    $begin-from-iter: #{$begin-from-iter}#{$unitType},
                )
            );
            
        }
        $begin-from-iter: $begin-from-iter + 1;
    }
    @return $size-map-cutom;
}

$utilities: (
    "rounded": (
        property: border-radius,
        class: rounded,
        responsive: true,
        values: (
            null: $border-radius,
            0: 0,
            1: $border-radius-sm,
            2: $border-radius,
            3: $border-radius-lg,
            4: $border-radius-md,
            5: $border-radius-xl,
            6: $border-radius-xxl,
            circle: 50%,
            pill: $border-radius-pill,
        ),
    ),
    "font-size": (
        /* rfs: true, */ property: font-size,
        responsive: true,
        class: fs,
        rfs:false,
        values: $font-sizes,
    ),
    "font-weight": (
        property: font-weight,
        class: fw,
        responsive: true,
        
        values: (
            light: $font-weight-light,
            lighter: $font-weight-lighter,
            normal: $font-weight-normal,
            medium: $font-weight-medium,
            bold: $font-weight-bold,
            semi-bold: $font-weight-semi-bold,
            bolder: $font-weight-bolder,
        ),
    ),
    "border-bottom": (
        property: border-bottom,
        responsive: true,
        state: hover,
        values: (
            null: $border-width solid $border-color,
            0: 0,
        ),
    ),
    "color": (
        property: color,
        class: text,
        values:
            map-merge(
                map-merge($theme-colors, $colors),
                (
                    "muted": $text-muted,
                    "reset": inherit,
                )
            ),
    ),
    "cursor": (
        property: cursor,
        values: auto default pointer wait text move help not-allowed,
    ),
    "min-height": (
        property: min-height,
        class: min-h,
        responsive: true,
        values: $min-height-sizes,
    ),
    "background-color": (
        property: background-color,
        class: bg,
        state: hover,
        values:
            map-merge(
                map-merge($theme-colors, $colors),
                (
                    "body": $body-bg,
                    "transparent": transparent,
                )
            ),
    ),
    "gap": (
        property: gap,
        class: gap,
        responsive: true,
        values: generate-sizes($max-gap, $begin-gap, $spread-gap,'px', false, true),
    ),
    "max-width": (
        property: max-width,
        class: mw,
        values: (
            25: 25%,
            50: 50%,
            75: 75%,
            100: 100%,
            auto: auto,
        ),
    ),
    "width": (
        property: width,
        class: w,
        responsive: true,
        values: generate-sizes($max-value-width, $spread-width, $begin-width, 'px', true),
    ),
    "width percent": (
        property: width,
        class: wp,
        responsive: true,
        values: generate-sizes($max-value-width-percent, $spread-width-percent, $begin-width-percent, '%', true),
    ),
);
